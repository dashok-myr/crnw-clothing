{"ast":null,"code":"import { takeEvery, call, put } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { convertCollectionsSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsFailure, fetchCollectionsStart, fetchCollectionsSuccess } from \"./shop.actions\";\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n\n  try {\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* FetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/dariausatyuk/Desktop/react-course/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsStart","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","FetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,IAAnB,EAAyBC,GAAzB,QAAmC,oBAAnC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,+BAAR,EAAyCC,SAAzC,QAAyD,+BAAzD;AACA,SAAQC,uBAAR,EAAiCC,qBAAjC,EAAwDC,uBAAxD,QAAsF,gBAAtF;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;;AAEA,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,cAAD,CAAxB,CAAT;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACI,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMjB,SAAS,CAACG,eAAe,CAACe,uBAAjB,EAA0CT,qBAA1C,CAAf;AACH","sourcesContent":["import {takeEvery, call, put} from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\"\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectionsFailure, fetchCollectionsStart, fetchCollectionsSuccess} from \"./shop.actions\";\n\nexport function* fetchCollectionsAsync() {\n    const collectionRef = firestore.collection('collections');\n\n    try {\n        const snapshot = yield collectionRef.get()\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message))\n    }\n}\n\nexport function* FetchCollectionsStart() {\n    yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}