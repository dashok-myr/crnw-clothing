{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyCQL2QhDt2vpE2NRPmVWYi20_txzLD5PHM\",\n  authDomain: \"crwn-db-4d4c2.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-4d4c2.firebaseio.com\",\n  projectId: \"crwn-db-4d4c2\",\n  storageBucket: \"crwn-db-4d4c2.appspot.com\",\n  messagingSenderId: \"802804025311\",\n  appId: \"1:802804025311:web:cc75f6bd94a0eb9c14666a\",\n  measurementId: \"G-JT5EYVVF11\"\n};\nexport const getOrCreateUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  const {\n    exists\n  } = snapShot;\n  if (exists) return userRef;\n  const {\n    displayName,\n    email\n  } = userAuth;\n  const createdAt = new Date();\n\n  try {\n    userRef.set({\n      displayName,\n      email,\n      createdAt,\n      ...additionalData\n    });\n  } catch (error) {\n    console.log(\"error creating user\", error.message);\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/dariausatyuk/Desktop/react-course/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getOrCreateUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,cANN;AAObC,EAAAA,KAAK,EAAE,2CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,8BAA8B,GAAG,OAC5CC,QAD4C,EAE5CC,cAF4C,KAGzC;AACH,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAaF,QAAnB;AAEA,MAAIE,MAAJ,EAAY,OAAON,OAAP;AACZ,QAAM;AAAEO,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBV,QAA/B;AACA,QAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,MAAI;AACFV,IAAAA,OAAO,CAACW,GAAR,CAAY;AACVJ,MAAAA,WADU;AAEVC,MAAAA,KAFU;AAGVC,MAAAA,SAHU;AAIV,SAAGV;AAJO,KAAZ;AAMD,GAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;;AAED,SAAOf,OAAP;AACD,CA1BM;AA4BP,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,WAAtB,KAAsC;AAC7E,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,WAAW,CAACI,OAAZ,CAAqBC,GAAD,IAAS;AAC3B,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AACAmB,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAqBD,GAArB;AACD,GAHD;AAIA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACD,CATM;AAWPtC,QAAQ,CAACuC,aAAT,CAAuBtC,MAAvB;AAEA,OAAO,MAAMuC,IAAI,GAAGxC,QAAQ,CAACwC,IAAT,EAAb;AACP,OAAO,MAAM1B,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAM2B,QAAQ,GAAG,IAAIzC,QAAQ,CAACwC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAezC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCQL2QhDt2vpE2NRPmVWYi20_txzLD5PHM\",\n  authDomain: \"crwn-db-4d4c2.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-4d4c2.firebaseio.com\",\n  projectId: \"crwn-db-4d4c2\",\n  storageBucket: \"crwn-db-4d4c2.appspot.com\",\n  messagingSenderId: \"802804025311\",\n  appId: \"1:802804025311:web:cc75f6bd94a0eb9c14666a\",\n  measurementId: \"G-JT5EYVVF11\",\n};\n\nexport const getOrCreateUserProfileDocument = async (\n  userAuth,\n  additionalData\n) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n  const { exists } = snapShot;\n\n  if (exists) return userRef;\n  const { displayName, email } = userAuth;\n  const createdAt = new Date();\n\n  try {\n    userRef.set({\n      displayName,\n      email,\n      createdAt,\n      ...additionalData,\n    });\n  } catch (error) {\n    console.log(\"error creating user\", error.message);\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n\n  const batch = firestore.batch();\n  objectToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit()\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ promt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}